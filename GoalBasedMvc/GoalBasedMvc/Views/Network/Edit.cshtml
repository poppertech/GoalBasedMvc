@model GoalBasedMvc.Models.NetworkEditViewModel

@section Scripts{

    <script>
        $(function () {
            Chart.defaults.scale.gridLines.display = false;

            var goalAttainmentLabels = [];
            var goalAttainmentData = [];

            var cashFlowsLabels = [];
            var cashFlowsData = [];

            var distributionData = [
                { x: @Model.Nodes[0].Distributions[0].Minimum, y: 0 },
                { x: @Model.Nodes[0].Distributions[0].Worst, y:@Model.Nodes[0].Distributions[0].HeightWorst },
                { x: @Model.Nodes[0].Distributions[0].Likely, y:@Model.Nodes[0].Distributions[0].HeightLikely },
                { x: @Model.Nodes[0].Distributions[0].Best, y:@Model.Nodes[0].Distributions[0].HeightBest },
                { x: @Model.Nodes[0].Distributions[0].Maximum, y: 0}
            ];

            @for(var cnt = 0; cnt < Model.CashFlows.Count; cnt++)
            {
                @:cashFlowsLabels.push("Year @cnt");
                @:cashFlowsData.push(@Model.CashFlows[cnt].Cost);
            }

            @for(var cnt = 0; cnt < Model.Portfolio.SuccessProbabilities.Count; cnt++)
            {
                @:goalAttainmentLabels.push("Year @cnt");
                @:goalAttainmentData.push(@Model.Portfolio.SuccessProbabilities[cnt]);
            }


            var goalAttainmentCtx = document.getElementById("goalAttainmentChart").getContext("2d");
            var cashFlowsCtx = document.getElementById("cashFlowsChart").getContext("2d");
            var distributionCtx = document.getElementById("distributionChart").getContext("2d");

            var goalAttainment = new Chart(goalAttainmentCtx, {
                type: 'line',
                data: {
                    labels: goalAttainmentLabels,
                    datasets: [{
                        label: 'Goal Attainment',
                        lineTension: 0,
                        data: goalAttainmentData
                    }]
                },
                options: {
                    legend: {
                        display: false
                    },
                    scales: {
                        yAxes: [{
                            ticks: {
                                fontSize: 14,
                                fontStyle: 'bold'
                            }
                        }],
                        xAxes: [{
                            ticks: {
                                fontSize: 14,
                                fontStyle: 'bold'
                            }
                        }]
                    }
                }
            });

            var cashFlows = new Chart(cashFlowsCtx, {
                type: 'line',
                data: {
                    labels: cashFlowsLabels,
                    datasets: [{
                        label: 'Cash Flow',
                        lineTension: 0,
                        data: cashFlowsData
                    }]
                },
                options: {
                    legend: {
                        display: false
                    },
                    scales: {
                        yAxes: [{
                            ticks: {
                                fontSize: 14,
                                fontStyle: 'bold'
                            }
                        }],
                        xAxes: [{
                            ticks: {
                                fontSize: 14,
                                fontStyle: 'bold'
                            }
                        }]
                    }
                }
            });

            var distribution = new Chart(distributionCtx, {
                type: 'scatter',
                data: {
                    labels: ["Minimum", "Worst", "Likely", "Best", "Maximum"],
                    datasets: [{
                        label: 'Distribution',
                        showLine: true,
                        lineTension: 0,
                        data: distributionData
                    }]
                },
                options: {
                    legend: {
                        display: false
                    },
                    scales: {
                        yAxes: [{
                            gridLines: {
                                drawBorder: false,
                            },
                            ticks: {
                                display: false
                            }
                        }],
                        xAxes: [{
                            type: 'linear',
                            position: 'bottom',
                            ticks: {
                                fontSize: 14,
                                fontStyle: 'bold'
                            }
                        }]
                    }
                }
            });

        });
    </script>

}

<div class="panel panel-primary">
    <div class="panel-heading">
        <h1 class="panel-title">Network 1</h1>
    </div>

    <form asp-controller="Network" asp-action="Edit" enctype="multipart/form-data" method="post" class="panel-body">

        <div class="panel panel-info">
            <div class="panel-heading">
                <h3 class="panel-title">Probability of Success</h3>
            </div>

            <div class="panel-body">
                <div class="row">
                    <div class="col-md-10 col-md-offset-1">
                        <canvas id="goalAttainmentChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-info">
            <div class="panel-heading">
                <h3 class="panel-title">Cash Flows</h3>
            </div>

            <div class="row">
                <div class="col-xs-8 col-xs-offset-2 col-sm-6 col-sm-offset-5 col-md-3 col-md-offset-8">
                    <input type="file" name="CashFlows" class="form-control" aria-label="Upload Cash Flows" />
                </div>
                <a class="btn btn-default" aria-label="Download Cash Flows" asp-controller="CashFlow" asp-action="Get" asp-route-networkId="@Model.Id">
                    <span class="glyphicon glyphicon-download" aria-hidden="true"></span>
                </a>
            </div>

            <div class="panel-body">
                <div class="row">
                    <div class="col-md-10 col-md-offset-1">
                        <canvas id="cashFlowsChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-info">
            <div class="panel-heading">
                <h3 class="panel-title">Nodes</h3>
            </div>

            <div class="row">
                <div class="col-xs-8 col-xs-offset-2 col-sm-6 col-sm-offset-5 col-md-3 col-md-offset-8">
                    <input type="file" name="Tree" class="form-control" aria-label="Upload Nodes" />
                </div>
                <a class="btn btn-default" aria-label="Download Nodes" asp-controller="Node" asp-action="Get" asp-route-networkId="@Model.Id">
                    <span class="glyphicon glyphicon-download" aria-hidden="true"></span>
                </a>
            </div>


            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Name</th>
                            <th>Parent</th>
                            <th>Initial Investment</th>
                            <th>Initial Price</th>
                            <th>Portfolio Component?</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var node in Model.Nodes)
                        {
                            <tr>
                                <td>@node.Id</td>
                                <td>@node.Name</td>
                                <td>@node.Parent?.Name</td>
                                <td>@node.InitialInvestment</td>
                                <td>@node.InitialPrice</td>
                                <td>@(node.IsPortfolioComponent ? "Yes": "No")</td>                          
                                <td><button type="button" class="btn btn-success">Select</button></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>


            <div class="panel-body">

                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h5 class="panel-title">Distribution</h5>
                    </div>

                    <div class="panel-body">
                        <div class="row">
                            <div class="col-xs-6 col-sm-3 col-md-2">
                                <label>Average:</label>
                                <span class="form-control-static">
                                    @Model.Nodes[0].Distributions[0].Mean
                                </span>
                            </div>
                            <div class="col-xs-6 col-sm-3 col-md-2">
                                <label>Volatility:</label>
                                <span class="form-control-static">
                                    @Model.Nodes[0].Distributions[0].Stdev
                                </span>
                            </div>
                            <div class="col-xs-6 col-sm-3 col-md-2">
                                <label>Skewness:</label>
                                <span class="form-control-static">
                                    @Model.Nodes[0].Distributions[0].Skew
                                </span>
                            </div>
                            <div class="col-xs-6 col-sm-3 col-md-2">
                                <label>Kurtosis:</label>
                                <span class="form-control-static">
                                    @Model.Nodes[0].Distributions[0].Kurt
                                </span>
                            </div>

                            <div class="col-sm-6 col-sm-offset-6 col-md-offset-0 col-md-4">

                                <select class="form-control pull-right">
                                    <option>Left Tail</option>
                                    <option>Left Normal</option>
                                    <option>Right Normal</option>
                                    <option>Right Tail</option>
                                </select>

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-10 col-md-offset-1">
                                <canvas id="distributionChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="btn-group pull-right" role="group">
                    <button type="submit" class="btn btn-lg btn-primary">Calculate</button>
                    <a class="btn btn-lg btn-danger pull-right" asp-area="" asp-controller="Network" asp-action="Index">Search</a>
                </div>
            </div>
        </div>

    </form>

</div>
